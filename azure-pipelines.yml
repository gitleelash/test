trigger:
- Development
pool:
  vmImage: 'macos-latest'

steps:
- task: CmdLine@2
  inputs:
    script: 'sudo gem install cocoapods'


- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Write-Host "##vso[task.setvariable variable=CP_HOME_DIR;]$(System.DefaultWorkingDirectory)/Cache"'

- task: CacheBeta@0
  inputs:
    key: PodReposTestZip | $(Agent.OS) | $(System.DefaultWorkingDirectory)/Konectom/Podfile.lock
    path: $(System.DefaultWorkingDirectory)/Cache/tmp/
  displayName: Cache Podfiles packages


- bash: |
    if [ -d $(System.DefaultWorkingDirectory)/Cache/tmp ]; then
      echo "##vso[task.setVariable variable=FILEEXISTS]true"
    fi

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Cache/tmp/cocoapods.zip'
    destinationFolder: '$(System.DefaultWorkingDirectory)/Cache/repos'
    cleanDestinationFolder: true
  condition: eq(variables.FILEEXISTS, 'true')

- task: CmdLine@2
  inputs:
    script: 'pod repo add azure-company-project-_git-specrepository-ios https://$(gitUser):$(gitPat)@dev.azure.com/company/project/_git/repo'

- task: CocoaPods@0
  inputs:
    forceRepoUpdate: false
    workingDirectory: 'AppDir'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'Certificats.p12'
    certPwd: '$(certifPwd)'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'ProvisionFile.mobileprovision'

- task: Xcode@5
  inputs:
    actions: 'build'
    scheme: 'Konectom-dev'
    sdk: "iphoneos13.0"
    xcodeVersion: 'specifyPath'
    xcodeDeveloperDir: '/Applications/Xcode_11.app'
    configuration: 'Release'
    xcWorkspacePath: 'Konectom/Konectom.xcworkspace'
    packageApp: true
    signingOption: manual
    signingIdentity: $(APPLE_CERTIFICATE_SIGNING_IDENTITY)
    provisioningProfileUuid: $(APPLE_PROV_PROFILE_UUID)
    exportPath: $(build.artifactstagingdirectory)/pkgApp

- task: CmdLine@2
  inputs:
    script: 'ls -la $(build.artifactstagingdirectory)/pkgApp'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/Cache/repos/cocoapods'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(System.DefaultWorkingDirectory)/Cache/tmp/cocoapods.zip'
    replaceExistingArchive: true
  condition: eq(variables.FILEEXISTS, 'false')

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'AppCenterEndpoint'
    appSlug: 'TestProject/TestApp'
    appFile: $(build.artifactstagingdirectory)/pkgApp/App.ipa
    releaseNotesOption: 'input'
    releaseNotesInput: ''
    destinationType: 'groups'
    symbolsOption: Apple