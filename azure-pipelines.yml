# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- Development

pool:
  vmImage: 'macos-latest'

steps:
- task: PowerShell@2
  inputs:
    filePath: './devbuild.ps1'
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './Actavivo'
- task: CocoaPods@0
  inputs:
    workingDirectory: './Actavivo/ios'
    forceRepoUpdate: true
  displayName: 'Default pod installation'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "uninstalling all cocoapods versions"
      sudo gem uninstall cocoapods -ax
      echo "installing latest cocopods version"
      sudo gem install cocoapods --pre
      sudo gem install fastlane -v 2.177.0
      pod --version
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'Certificates.p12' 
    certPwd: $(Aitcert)
    keychain: 'temp'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'AITDevProvisioningprofile.mobileprovision'
    removeProfile: true
- task: Xcode@5
  displayName: 'Build and Sign'
  inputs:
    actions: 'build'
    sdk: '$(sdk)'
    scheme: 'actavivo'
    signingOption: 'manual'
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    teamId: '3ZPX86GR9G'
    exportTeamId: '3ZPX86GR9G'
    packageApp: true
    exportOptions: 'plist'
    exportOptionsPlist: 'ExportOptions.plist'
    exportPath: "$(system.DefaultWorkingDirectory)"
    args: 'CODE_SIGNING_ALLOWED=No -UseModernBuildSystem=0'
    configuration: '$(configuration)' # only testable for Debug with current config
    xcWorkspacePath: './Actavivo/ios/actavivo.xcworkspace'
    xcodeVersion: 'default'
- task: CopyFiles@2
  inputs:
    #sourceFolder: "$(system.defaultworkingdirectory)/archive"
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(build.artifactStagingDirectory)/output/$(sdk)/$(configuration)'
    ArtifactName: 'IOSdrop'
    publishLocation: 'Container'
`